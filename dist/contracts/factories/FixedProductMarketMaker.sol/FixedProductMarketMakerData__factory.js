"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FixedProductMarketMakerData__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "funder",
                type: "address",
            },
            {
                indexed: false,
                name: "amountsAdded",
                type: "uint256[]",
            },
            {
                indexed: false,
                name: "sharesMinted",
                type: "uint256",
            },
        ],
        name: "FPMMFundingAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "funder",
                type: "address",
            },
            {
                indexed: false,
                name: "amountsRemoved",
                type: "uint256[]",
            },
            {
                indexed: false,
                name: "collateralRemovedFromFeePool",
                type: "uint256",
            },
            {
                indexed: false,
                name: "sharesBurnt",
                type: "uint256",
            },
        ],
        name: "FPMMFundingRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "buyer",
                type: "address",
            },
            {
                indexed: false,
                name: "investmentAmount",
                type: "uint256",
            },
            {
                indexed: false,
                name: "feeAmount",
                type: "uint256",
            },
            {
                indexed: true,
                name: "outcomeIndex",
                type: "uint256",
            },
            {
                indexed: false,
                name: "outcomeTokensBought",
                type: "uint256",
            },
        ],
        name: "FPMMBuy",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "seller",
                type: "address",
            },
            {
                indexed: false,
                name: "returnAmount",
                type: "uint256",
            },
            {
                indexed: false,
                name: "feeAmount",
                type: "uint256",
            },
            {
                indexed: true,
                name: "outcomeIndex",
                type: "uint256",
            },
            {
                indexed: false,
                name: "outcomeTokensSold",
                type: "uint256",
            },
        ],
        name: "FPMMSell",
        type: "event",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723058206910496edc33f46cbe11bbfc01f9a3371ab5640b521b27bf8d2b3f2ec2b7dee564736f6c634300050a0032";
const isSuperArgs = (xs) => xs.length > 1;
class FixedProductMarketMakerData__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FixedProductMarketMakerData__factory = FixedProductMarketMakerData__factory;
FixedProductMarketMakerData__factory.bytecode = _bytecode;
FixedProductMarketMakerData__factory.abi = _abi;
